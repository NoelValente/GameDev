using UnityEngine;
using UnityEngine.UI;

public class HealthBarController : MonoBehaviour
{
    public Slider healthSlider; // UI slider for displaying health
    public Image fillImage; // Image to visually represent health
    public float maxHealth = 100f; // Maximum health value
    private float currentHealth; // Player's current health

    void Start()
    {
        // Initialize health values at the start
        currentHealth = maxHealth;
        healthSlider.maxValue = maxHealth;
        healthSlider.value = currentHealth;
    }

    // Method to apply damage to the player
    public void TakeDamage(float damage)
    {
        currentHealth -= damage; // Reduce health
        currentHealth = Mathf.Clamp(currentHealth, 0, maxHealth); // Ensure health doesn't go below 0
        healthSlider.value = currentHealth; // Update health bar UI
    }

    // Method to heal the player
    public void Heal(float healingAmount)
    {
        currentHealth += healingAmount; // Increase health
        currentHealth = Mathf.Clamp(currentHealth, 0, maxHealth); // Ensure health doesn't exceed max
        healthSlider.value = currentHealth; // Update health bar UI
    }
}

public class Player : MonoBehaviour
{
    public HealthBarController healthBar; // Reference to the health bar script
    public float collisionDamage = 10f; // Amount of damage taken when colliding with an enemy

    // Called when the player collides with another object (if not using triggers)
    private void OnCollisionEnter2D(Collision2D collision)
    {
        // Check if the collided object has the "Enemy" tag
        if (collision.gameObject.CompareTag("Enemy")) 
        {
            healthBar.TakeDamage(collisionDamage); // Apply damage
        }
    }

    // Called when the player enters a trigger collider (if using triggers instead of collisions)
    private void OnTriggerEnter2D(Collider2D other)
    {
        // Check if the triggering object has the "Enemy" tag
        if (other.gameObject.CompareTag("Enemy")) 
        {
            healthBar.TakeDamage(collisionDamage); // Apply damage
        }
    }
}
